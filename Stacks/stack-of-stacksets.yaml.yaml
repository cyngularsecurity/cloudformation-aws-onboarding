AWSTemplateFormatVersion: "2010-09-09"
Description: manager stack, dynamic creation of AWS Guard Duty Detectors, R53 Reslover Query log configs, [VPC Flow Logs & DNS Logs] - over Specified Regions in Selected Accounts [, OUs, Organization/s]

Parameters:
  ClientName:
    Type: String
    Description: The name of the client

  S3ManagementBucketArn:
    Description: The Arn of the created S3 bucket.
    Type: String

  AdministrationRoleARN:
    Description: "arn of administration role for cfn stackset deploy"
    Type: String

  CyngularAccountId:
    Description: "The cyngular Account ID to assume read only role"
    Type: String
    MinLength: 12
    MaxLength: 12
    AllowedPattern: "[0-9]*"
    Default: 851565895544

  MgmtAccountId:
    Description: The cyngular account id
    Type: String

  Org:
    Description: Specify whether the client is using an organization
    Type: String
    Default: "0"
    AllowedValues: ["0", "{org-id}"]
    ConstraintDescription: Must specify "0" or the client organization ID

  DeployList: # check if empty, and others are not, concat
    Description: Comma-separated list of account IDs or OUs to include
    Type: String
    Default: "0"

  AccountList:
    Description: Comma-separated list of account IDs to include
    Type: String
    Default: "0"

  OUList:
    Description: Comma-separated list of OUs to include
    Type: String
    Default: "0"

  EnableGuardDuty:
    Description: Whether to create GuardDuty Detector
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"

  EnableResolver:
    Description: Whether to create Route 53 Resolver, for logging vpc flows
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"

  ClientRegions:
    Description: The regions in which the client operates (comma-separated for example; us-east-1,us-east-2), make sure all regions listed are enabled in the relevent accounts
    Type: CommaDelimitedList
    AllowedValues: [me-south-1, us-east-1, us-east-2, us-west-1, us-west-2, ap-southeast-1, ap-southeast-2, ap-south-1, ap-northeast-1, ap-northeast-2, ap-northeast-3, af-south-1, eu-west-1, eu-west-2, eu-west-3, eu-central-1, eu-north-1, eu-south-1, ca-central-1, sa-east-1, il-central-1, af-north-1, ap-east-1]
  
  Stack2URL:
    Description: 'The link to the stack2 template url'
    Type: String
    Default: 'https://cyngular-onboarding-templates.s3.amazonaws.com/stacks/stack2.yaml'

  StackSet1URL:
    Description: 'The link to the stackset1 template url'
    Type: String
    Default: 'https://cyngular-onboarding-templates.s3.amazonaws.com/stacks/stackset_child1.yaml'

  StackSet2URL:
    Description: 'The link to the stackset2 template url'
    Type: String
    Default: 'https://cyngular-onboarding-templates.s3.amazonaws.com/stacks/stackset_child2.yaml'


Conditions:
  IsOrg: !Not [!Equals [!Ref Org, "0"]]
#   EnableGuardDutyCondition: !Equals [!Ref EnableGuardDuty, "true"]
#   EnableResolverCondition: !Equals [!Ref EnableResolver, "true"]
  # DeployGuardDutyForAccounts: !And [!Condition EnableGuardDutyForOrg, !Not [!Equals [!Ref AccountList, "0"]]]
  # DeployGuardDutyForOUs: !And [!Condition EnableGuardDutyForOrg, !Not [!Equals [!Ref OUList, "0"]]]
  # DeployResolverForAccounts: !And [!Condition EnableResolverForOrg, !Not [!Equals [!Ref AccountList, "0"]]]
  # DeployResolverForOUs: !And [!Condition EnableResolverForOrg, !Not [!Equals [!Ref OUList, "0"]]]

  # if DeployList is empty and others are not
  CheckDeployList: !And
    - !Equals [!Ref DeployList, "0"]
    - !Not [!Equals [!Ref AccountList, "0"]]
    - !Not [!Equals [!Ref OUList, "0"]]

Resources:
  MgmtMultiRegion:
    Type: AWS::CloudFormation::StackSet
    Properties:
      AdministrationRoleARN: !Ref AdministrationRoleARN
      Description: Multiple route53 resolvers and guardduty detectors in multiple regions
      StackSetName: !Sub "cyngular-mgmt-account-regions-${ClientName}" # "cyngular-stack-2-${ClientName}"
      TemplateURL: !Ref Stack2URL

      PermissionModel: SELF_MANAGED
      ManagedExecution:
        Active: true
      Capabilities: ['CAPABILITY_IAM',"CAPABILITY_NAMED_IAM"]
      OperationPreferences:
        MaxConcurrentPercentage: 100
        FailureTolerancePercentage: 100
        RegionConcurrencyType: "PARALLEL"
      # AutoDeployment:
      #   Enabled: true
      #   RetainStacksOnAccountRemoval: false
      Parameters:
        - ParameterKey: ClientName
          ParameterValue: !Ref ClientName
        - ParameterKey: S3ManagementBucketArn
          ParameterValue: !Ref S3ManagementBucketArn
        - ParameterKey: CyngularAccountId
          ParameterValue: !Ref CyngularAccountId
        - ParameterKey: deployRegions
          ParameterValue: !Join [",", !Ref ClientRegions]

      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref MgmtAccountId # "AWS::AccountId"
          Regions: !Ref ClientRegions # [!Ref ClientRegions] # listed list

  ChildsPerAcc:
    Type: AWS::CloudFormation::StackSet
    DependsOn: [MgmtMultiRegion]

    Properties:
      Description:  "deploys lambdas, role, etc for each account in deploy list (org, ou, accounts)"
      StackSetName: !Sub "cyngular-stack-child-1-${ClientName}"
      TemplateURL: !Ref StackSet1URL

      PermissionModel: SELF_MANAGED
      Capabilities: ['CAPABILITY_IAM',"CAPABILITY_NAMED_IAM"]
      OperationPreferences:
        MaxConcurrentPercentage: 100
        FailureTolerancePercentage: 100
        RegionConcurrencyType: "PARALLEL"
      # AutoDeployment: 
      #   Enabled: False

      Parameters:
        - ParameterKey: ClientName
          ParameterValue: !Ref ClientName
        - ParameterKey: S3ManagementBucketArn
          ParameterValue: !Ref S3ManagementBucketArn
        - ParameterKey: CyngularAccountId
          ParameterValue: !Ref CyngularAccountId
        - ParameterKey: deployRegions
          ParameterValue: !Join [",", !Ref ClientRegions]

      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref child_accounts
          Regions: [!Ref AWS::Region]

  ChildsMultiRegion:
    Type: AWS::CloudFormation::StackSet
    Properties:
      Description:  Stach to deploy on all child accounts and regions
      StackSetName: !Sub "cyngular-stack-child-2-${ClientName}"
      TemplateURL: !Ref StackSet2URL

      PermissionModel: SELF_MANAGED
      Capabilities: ['CAPABILITY_IAM',"CAPABILITY_NAMED_IAM"]
      OperationPreferences:
        MaxConcurrentPercentage: 100
        FailureTolerancePercentage: 100
        RegionConcurrencyType: "PARALLEL"
      # AutoDeployment: 
      #   Enabled: False

      Parameters:
        - ParameterKey: ClientName
          ParameterValue: !Ref ClientName
        - ParameterKey: S3ManagementBucketArn
          ParameterValue: !Ref S3ManagementBucketArn
        - ParameterKey: CyngularAccountId
          ParameterValue: !Ref CyngularAccountId
        - ParameterKey: deployRegions
          ParameterValue: !Join [",", !Ref ClientRegions]

      StackInstancesGroup:
        - DeploymentTargets:
            # OrganizationalUnitIds:
            Accounts:
              - !Ref child_accounts
          Regions: !Ref ClientRegions

 MyStackSet:
    Type: 'AWS::CloudFormation::StackSet'
    Properties:
      StackSetName: !Ref 'StackSetName'
      Description: 'AWS CloudFormation StackSet with Nested Stack'
      PermissionModel: SELF_MANAGED
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      Capabilities:
        - CAPABILITY_IAM
      TemplateURL: 's3://your-bucket/your-stackset-template.yml'  # Specify the path to your StackSet template
      Parameters:
        YourParameter: !Ref 'YourParameter'
      AdministrationRoleARN: 'arn:aws:iam::123456789012:role/admin-role'  # Replace with your admin role ARN
      ExecutionRoleName: 'AWSCloudFormationStackSetExecutionRole'
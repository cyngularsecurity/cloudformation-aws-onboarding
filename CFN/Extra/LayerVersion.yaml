# aioboto3-layers-template.yaml
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Public aioboto3 Lambda layers for Python 3.9, 3.10, 3.11, and 3.12'

Parameters:
  LayerName:
    Type: String
    Default: 'aioboto3-layer'
    Description: 'Base name for the Lambda layer'

Resources:
  AioBoto3LayerPython39:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub '${LayerName}-python39'
      Description: 'aioboto3 library for Python 3.9'
      Content:
        S3Bucket: !Ref LayerBucket
        S3Key: 'aioboto3-python3.9-layer.zip'
      CompatibleRuntimes:
        - python3.9
      LicenseInfo: 'Apache-2.0'
      CompatibleArchitectures:
        - x86_64
        - arm64

  AioBoto3LayerPython310:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub '${LayerName}-python310'
      Description: 'aioboto3 library for Python 3.10'
      Content:
        S3Bucket: !Ref LayerBucket
        S3Key: 'aioboto3-python3.10-layer.zip'
      CompatibleRuntimes:
        - python3.10
      LicenseInfo: 'Apache-2.0'
      CompatibleArchitectures:
        - x86_64
        - arm64

  AioBoto3LayerPython311:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub '${LayerName}-python311'
      Description: 'aioboto3 library for Python 3.11'
      Content:
        S3Bucket: !Ref LayerBucket
        S3Key: 'aioboto3-python3.11-layer.zip'
      CompatibleRuntimes:
        - python3.11
      LicenseInfo: 'Apache-2.0'
      CompatibleArchitectures:
        - x86_64
        - arm64

  AioBoto3LayerPython312:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub '${LayerName}-python312'
      Description: 'aioboto3 library for Python 3.12'
      Content:
        S3Bucket: !Ref LayerBucket
        S3Key: 'aioboto3-python3.12-layer.zip'
      CompatibleRuntimes:
        - python3.12
      LicenseInfo: 'Apache-2.0'
      CompatibleArchitectures:
        - x86_64
        - arm64

  LayerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${LayerName}-bucket-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # Make layers public
  LayerPermissionPython39:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      LayerVersionArn: !Ref AioBoto3LayerPython39
      Action: lambda:GetLayerVersion
      Principal: '*'

  LayerPermissionPython310:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      LayerVersionArn: !Ref AioBoto3LayerPython310
      Action: lambda:GetLayerVersion
      Principal: '*'

  LayerPermissionPython311:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      LayerVersionArn: !Ref AioBoto3LayerPython311
      Action: lambda:GetLayerVersion
      Principal: '*'

  LayerPermissionPython312:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      LayerVersionArn: !Ref AioBoto3LayerPython312
      Action: lambda:GetLayerVersion
      Principal: '*'

Outputs:
  Python39LayerArn:
    Description: 'ARN of the aioboto3 layer for Python 3.9'
    Value: !Ref AioBoto3LayerPython39
    Export:
      Name: !Sub '${AWS::StackName}-Python39-LayerArn'

  Python310LayerArn:
    Description: 'ARN of the aioboto3 layer for Python 3.10'
    Value: !Ref AioBoto3LayerPython310
    Export:
      Name: !Sub '${AWS::StackName}-Python310-LayerArn'

  Python311LayerArn:
    Description: 'ARN of the aioboto3 layer for Python 3.11'
    Value: !Ref AioBoto3LayerPython311
    Export:
      Name: !Sub '${AWS::StackName}-Python311-LayerArn'

  Python312LayerArn:
    Description: 'ARN of the aioboto3 layer for Python 3.12'
    Value: !Ref AioBoto3LayerPython312
    Export:
      Name: !Sub '${AWS::StackName}-Python312-LayerArn'